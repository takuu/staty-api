{"version":3,"sources":["stat.controller.js"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA,IAAI,IAAI,QAAQ,QAAR,CAAJ;AACJ,IAAI,OAAO,QAAQ,iBAAR,CAAP;AACJ,IAAI,WAAW,QAAQ,UAAR,EAAoB,KAApB,CAA0B,QAA1B;;;AAGf,QAAQ,KAAR,GAAgB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACjC,OAAK,IAAL,CAAU,UAAU,GAAV,EAAe,KAAf,EAAsB;AAC9B,QAAG,GAAH,EAAQ;AAAE,aAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAF;KAAR;AACA,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,KAArB,EAF8B;GAAtB,CAAV,CADiC;CAAnB;;;AAQhB,QAAQ,IAAR,GAAe,UAAS,GAAT,EAAc,GAAd,EAAmB;AAChC,OAAK,QAAL,CAAc,IAAI,MAAJ,CAAW,EAAX,EAAe,UAAU,GAAV,EAAe,IAAf,EAAqB;AAChD,QAAG,GAAH,EAAQ;AAAE,aAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAF;KAAR;AACA,QAAG,CAAC,IAAD,EAAO;AAAE,aAAO,IAAI,IAAJ,CAAS,GAAT,CAAP,CAAF;KAAV;AACA,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB,EAHgD;GAArB,CAA7B,CADgC;CAAnB;;;AASf,QAAQ,MAAR,GAAiB,UAAS,GAAT,EAAc,GAAd,EAAmB;kBACb,IAAI,IAAJ,CADa;MAC7B,0BAD6B;MACrB,sBADqB;;AAElC,OAAK,KAAL,CAAW,EAAC,QAAQ,SAAS,MAAT,CAAR,EAA0B,MAAM,SAAS,IAAT,CAAN,EAAtC,EAA6D,UAAU,GAAV,EAAe,KAAf,EAAsB;AACjF,QAAI,GAAJ,EAAS;AAAE,aAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAF;KAAT;AACA,QAAI,CAAC,KAAD,EAAQ;AACV,WAAK,MAAL,CAAY,IAAI,IAAJ,EAAU,UAAS,GAAT,EAAc,IAAd,EAAoB;AACxC,YAAG,GAAH,EAAQ;AAAE,iBAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAF;SAAR;AACA,eAAO,IAAI,IAAJ,CAAS,GAAT,EAAc,IAAd,CAAP,CAFwC;OAApB,CAAtB,CADU;KAAZ;GAF2D,CAA7D,CAFkC;CAAnB;;;AAejB,QAAQ,MAAR,GAAiB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAClC,MAAG,IAAI,IAAJ,CAAS,GAAT,EAAc;AAAE,WAAO,IAAI,IAAJ,CAAS,GAAT,CAAT;GAAjB;AACA,OAAK,QAAL,CAAc,IAAI,MAAJ,CAAW,EAAX,EAAe,UAAU,GAAV,EAAe,IAAf,EAAqB;AAChD,QAAI,GAAJ,EAAS;AAAE,aAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAF;KAAT;AACA,QAAG,CAAC,IAAD,EAAO;AAAE,aAAO,IAAI,IAAJ,CAAS,GAAT,CAAP,CAAF;KAAV;AACA,QAAI,UAAU,EAAE,KAAF,CAAQ,IAAR,EAAc,IAAI,IAAJ,CAAxB,CAH4C;AAIhD,YAAQ,IAAR,CAAa,UAAU,GAAV,EAAe;AAC1B,UAAI,GAAJ,EAAS;AAAE,eAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAF;OAAT;AACA,aAAO,IAAI,IAAJ,CAAS,GAAT,EAAc,IAAd,CAAP,CAF0B;KAAf,CAAb,CAJgD;GAArB,CAA7B,CAFkC;CAAnB;;AAajB,QAAQ,cAAR,GAAyB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC1C,MAAI,KAAK,IAAI,MAAJ,CAAW,EAAX,CADiC;AAE1C,OAAK,IAAL,CAAU,EAAC,QAAQ,EAAR,EAAX,EACG,QADH,CACY,aADZ,EAEG,QAFH,CAEY,QAFZ,EAEsB,UAFtB,EAGG,QAHH,CAGY,QAHZ,EAGsB,iBAHtB,EAIG,IAJH,CAIQ,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC3B,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,KAArB,EAD2B;GAArB,CAJR,CAF0C;CAAnB;;AAWzB,QAAQ,kBAAR,GAA6B,UAAS,GAAT,EAAc,GAAd,EAAmB;MACzC,KAAM,IAAI,KAAJ,CAAN,GADyC;;AAE9C,MAAI,OAAO,EAAE,GAAF,CAAM,GAAG,KAAH,CAAS,GAAT,CAAN,EAAqB,UAAC,IAAD,EAAU;AACxC,WAAO,SAAS,IAAT,CAAP,CADwC;GAAV,CAA5B,CAF0C;AAK9C,UAAQ,GAAR,CAAY,QAAZ,EAAsB,KAAK,MAAL,EAAa,IAAnC,EAL8C;AAM9C,MAAI,QAAQ,KAAK,MAAL,EAAa;AACvB,SAAK,IAAL,CAAU,EAAC,UAAU,EAAE,KAAK,IAAL,EAAZ,EAAX,EACG,QADH,CACY,UADZ,EACwB,UADxB,EAEG,QAFH,CAEY,QAFZ,EAEsB,UAFtB,EAGG,QAHH,CAGY,QAHZ,EAGsB,iBAHtB,EAIG,QAJH,CAIY,yBAJZ,EAKG,QALH,CAKY;AACR,YAAM,QAAN;AACA,gBAAU,EAAE,MAAM,MAAN,EAAc,OAAO,MAAP,EAA1B;KAPJ,EASG,QATH,CASY;AACR,YAAM,QAAN;AACA,gBAAU,EAAE,MAAM,QAAN,EAAgB,OAAO,QAAP,EAA5B;KAXJ,EAaG,QAbH,CAaY;AACR,YAAM,QAAN;AACA,gBAAU,EAAE,MAAM,QAAN,EAAgB,OAAO,QAAP,EAA5B;KAfJ,EAiBG,IAjBH,CAiBQ,UAAS,GAAT,EAAc,KAAd,EAAqB;AACzB,UAAI,GAAJ,EAAS,OAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAT;AACA,UAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,KAArB,EAFyB;KAArB,CAjBR,CADuB;GAAzB,MAsBO;AACL,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,EAArB,EADK;GAtBP;CAN2B;;AAiC7B,QAAQ,+BAAR,GAA0C,UAAS,GAAT,EAAc,GAAd,EAAmB;MACtD,KAAM,IAAI,MAAJ,CAAN,GADsD;;AAE3D,UAAQ,GAAR,CAAY,wBAAZ,EAF2D;AAG3D,OAAK,SAAL,CAAe,CACb;AACE,YAAQ;AACN,gBAAU,IAAI,QAAJ,CAAa,EAAb,CAAV;KADF;GAFW,EAKV;AACD,YAAQ;AACN,WAAK,OAAL;AACA,sBAAgB,EAAC,MAAM,SAAN,EAAjB;AACA,6BAAuB,EAAC,MAAM,gBAAN,EAAxB;AACA,8BAAwB,EAAC,MAAM,iBAAN,EAAzB;AACA,mCAA6B,EAAC,MAAM,sBAAN,EAA9B;AACA,+BAAyB,EAAC,MAAM,kBAAN,EAA1B;AACA,oCAA8B,EAAC,MAAM,uBAAN,EAA/B;AACA,8BAAwB,EAAC,MAAM,iBAAN,EAAzB;AACA,mCAA6B,EAAC,MAAM,sBAAN,EAA9B;AACA,sBAAgB,EAAC,MAAM,SAAN,EAAjB;AACA,sBAAgB,EAAC,MAAM,SAAN,EAAjB;AACA,uBAAiB,EAAC,MAAM,UAAN,EAAlB;AACA,mBAAa,EAAC,WAAW,OAAX,EAAd;KAbF;GANW,EAqBV;AACD,cAAW;AACT,WAAK,KAAL;AACA,sBAAgB,iBAAhB;;AAEA,6BAAuB,wBAAvB;AACA,8BAAwB,yBAAxB;AACA,mCAA6B,8BAA7B;AACA,+BAAyB,0BAAzB;AACA,oCAA8B,+BAA9B;AACA,8BAAwB,yBAAxB;AACA,mCAA6B,8BAA7B;AACA,sBAAgB,iBAAhB;AACA,sBAAgB,iBAAhB;AACA,uBAAiB,kBAAjB;AACA,iBAAW,EAAE,OAAO,cAAP,EAAb;KAdF;GAtBW,CAAf,EAuCG,UAAU,GAAV,EAAe,KAAf,EAAsB;AACvB,QAAI,GAAJ,EAAS,OAAO,YAAY,GAAZ,EAAiB,GAAjB,CAAP,CAAT;AACA,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,KAArB,EAFuB;GAAtB,CAvCH,CAH2D;CAAnB;;AAgD1C,QAAQ,YAAR,GAAuB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACxC,MAAI,KAAK,IAAI,MAAJ,CAAW,EAAX,CAD+B;AAExC,OAAK,IAAL,CAAU,EAAC,MAAM,EAAN,EAAX,EACG,QADH,CACY,yBADZ,EAEG,IAFH,CAEQ,UAAS,GAAT,EAAc,KAAd,EAAqB;AACzB,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,KAArB,EADyB;GAArB,CAFR,CAFwC;CAAnB;;AAUvB,QAAQ,YAAR,GAAuB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACxC,MAAI,KAAK,IAAI,MAAJ,CAAW,EAAX,CAD+B;AAExC,OAAK,IAAL,CAAU,EAAC,MAAM,EAAN,EAAX,EACG,QADH,CACY,aADZ,EAEG,IAFH,CAEQ,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC3B,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,KAArB,EAD2B;GAArB,CAFR,CAFwC;CAAnB;;AASvB,SAAS,WAAT,CAAqB,GAArB,EAA0B,GAA1B,EAA+B;AAC7B,UAAQ,GAAR,CAAY,aAAZ,EAD6B;AAE7B,UAAQ,GAAR,CAAY,GAAZ,EAF6B;AAG7B,SAAO,IAAI,IAAJ,CAAS,GAAT,EAAc,GAAd,CAAP,CAH6B;CAA/B","file":"stat.controller-compiled.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /stats              ->  index\n * POST    /stats              ->  create\n * GET     /stats/:id          ->  show\n * PUT     /stats/:id          ->  update\n * DELETE  /stats/:id          ->  destroy\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar Stat = require('./stat.model.js');\nvar ObjectId = require('mongoose').Types.ObjectId;\n\n// Get list of stats\nexports.index = function(req, res) {\n  Stat.find(function (err, stats) {\n    if(err) { return handleError(res, err); }\n    res.status(200).send(stats);\n  });\n};\n\n// Get a single stat\nexports.show = function(req, res) {\n  Stat.findById(req.params.id, function (err, stat) {\n    if(err) { return handleError(res, err); }\n    if(!stat) { return res.send(404); }\n    res.status(200).send(stat);\n  });\n};\n\n// Creates a new stat in the DB.\nexports.create = function(req, res) {\n  let {player, game} = req.body;\n  Stat.count({player: ObjectId(player), game: ObjectId(game)}, function (err, count) {\n    if (err) { return handleError(res, err); }\n    if (!count) {\n      Stat.create(req.body, function(err, stat) {\n        if(err) { return handleError(res, err); }\n        return res.json(201, stat);\n      });\n    }\n  });\n\n};\n\n// Updates an existing stat in the DB.\nexports.update = function(req, res) {\n  if(req.body._id) { delete req.body._id; }\n  Stat.findById(req.params.id, function (err, stat) {\n    if (err) { return handleError(res, err); }\n    if(!stat) { return res.send(404); }\n    var updated = _.merge(stat, req.body);\n    updated.save(function (err) {\n      if (err) { return handleError(res, err); }\n      return res.json(200, stat);\n    });\n  });\n};\n\nexports.getPlayerStats = function(req, res) {\n  var id = req.params.id;\n  Stat.find({player: id})\n    .populate('vsTeam game')\n    .populate('league', 'name _id')\n    .populate('season', 'name _id active')\n    .exec(function(err, stats) {\n    res.status(200).send(stats);\n  });\n};\n\nexports.getPlayerListStats = function(req, res) {\n  var {id} = req.query;\n  var list = _.map(id.split(','), (item) => {\n    return ObjectId(item);\n  });\n  console.log('test: ', list.length, list);\n  if (list && list.length) {\n    Stat.find({'player': { $in: list }})\n      .populate('division', 'name _id')\n      .populate('league', 'name _id')\n      .populate('season', 'name _id active')\n      .populate('team vsTeam game player')\n      .populate({\n        path: 'player',\n        populate: { path: 'team', model: 'Team' }\n      })\n      .populate({\n        path: 'player',\n        populate: { path: 'season', model: 'Season' }\n      })\n      .populate({\n        path: 'player',\n        populate: { path: 'league', model: 'League' }\n      })\n      .exec(function(err, stats) {\n        if (err) return handleError(res, err);\n        res.status(200).send(stats);\n      });\n  } else {\n    res.status(200).send({});\n  }\n};\n\nexports.getTeamAggregateStatsByDivision = function(req, res) {\n  let {id} = req.params;\n  console.log('This is getting called');\n  Stat.aggregate([\n    {\n      $match: {\n        division: new ObjectId(id)\n      }\n    }, {\n      $group: {\n        _id: '$team',\n        combinedPoints: {$sum: '$points'},\n        combinedTotalRebounds: {$sum: '$totalRebounds'},\n        combinedFreeThrowsMade: {$sum: '$freeThrowsMade'},\n        combinedFreeThrowsAttempted: {$sum: '$freeThrowsAttempted'},\n        combinedThreePointsMade: {$sum: '$threePointsMade'},\n        combinedThreePointsAttempted: {$sum: '$threePointsAttempted'},\n        combinedFieldGoalsMade: {$sum: '$fieldGoalsMade'},\n        combinedFieldGoalsAttempted: {$sum: '$fieldGoalsAttempted'},\n        combinedBlocks: {$sum: '$blocks'},\n        combinedSteals: {$sum: '$steals'},\n        combinedAssists: {$sum: '$assists'},\n        gamesPlayed: {$addToSet: '$game'}\n      }\n    }, {\n      $project : {\n        _id: '$id',\n        combinedPoints: '$combinedPoints',\n\n        combinedTotalRebounds: '$combinedTotalRebounds',\n        combinedFreeThrowsMade: '$combinedFreeThrowsMade',\n        combinedFreeThrowsAttempted: '$combinedFreeThrowsAttempted',\n        combinedThreePointsMade: '$combinedThreePointsMade',\n        combinedThreePointsAttempted: '$combinedThreePointsAttempted',\n        combinedFieldGoalsMade: '$combinedFieldGoalsMade',\n        combinedFieldGoalsAttempted: '$combinedFieldGoalsAttempted',\n        combinedBlocks: '$combinedBlocks',\n        combinedSteals: '$combinedSteals',\n        combinedAssists: '$combinedAssists',\n        gameCount: { $size: '$gamesPlayed'}\n      }\n    }\n  ], function (err, stats) {\n    if (err) return handleError(res, err);\n    res.status(200).send(stats);\n  });\n};\n\nexports.getTeamStats = function(req, res) {\n  var id = req.params.id;\n  Stat.find({team: id})\n    .populate('team vsTeam game player')\n    .exec(function(err, stats) {\n      res.status(200).send(stats);\n    });\n};\n\n\nexports.getGameStats = function(req, res) {\n  var id = req.params.id;\n  Stat.find({game: id})\n    .populate('player game')\n    .exec(function(err, stats) {\n    res.status(200).send(stats);\n  });\n};\n\nfunction handleError(res, err) {\n  console.log('handleError');\n  console.log(err);\n  return res.send(500, err);\n}\n"]}